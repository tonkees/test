import io  # Импортируем модуль для работы с потоками ввода-вывода
import streamlit as st  # Импортируем библиотеку Streamlit для создания веб-приложений

from transformers import pipeline  # Импортируем функцию pipeline из библиотеки Transformers для работы с моделями машинного обучения
from PIL import Image  # Импортируем класс Image из библиотеки PIL для работы с изображениями


def load_image():
    # Функция для загрузки изображения через интерфейс Streamlit
    uploaded_file = st.file_uploader(label='Выберите изображение для распознавания')  # Создаем элемент загрузки файла
    if uploaded_file is not None:  # Проверяем, было ли загружено изображение
        image_data = uploaded_file.getvalue()  # Получаем данные загруженного файла
        st.image(image_data)  # Отображаем загруженное изображение на веб-странице
        return Image.open(io.BytesIO(image_data))  # Открываем изображение и возвращаем его в формате PIL
    else:
        return None  # Если файл не загружен, возвращаем None


st.title('Распознай испанский текст с изображения!')  # Устанавливаем заголовок веб-приложения
img = load_image()  # Загружаем изображение с помощью функции load_image()

result = st.button('Распознать изображение')  # Создаем кнопку для запуска процесса распознавания текста
if result:  # Если кнопка нажата
    captioner = pipeline("image-to-text", "")  # Создаем экземпляр модели для распознавания текста на изображениях (В ковычках нужно указать название модели)
    text = captioner(img)  # Применяем модель к загруженному изображению для получения текста
    st.write('Результаты распознавания:')  # Выводим заголовок для результатов
    st.write(text[0]["generated_text"])  # Отображаем распознанный текст на веб-странице
